[0m[[0m[0mdebug[0m] [0m[0m> Exec(collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / collectAnalyses[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: bloop.integrations.sbt.Offloader$$anon$1@7eefaca0, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: initialized: JsonRpcNotificationMessage(2.0, initialized, {})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/gianc/Desktop/Revature/BigDataRepo/HWRepo/Project0/todocrud/src/main/scala/Main.scala","languageId":"scala","version":1,"text":"import java.util.Scanner\r\nimport java.sql.DriverManager\r\nimport java.sql.Connection\r\nobject Main{\r\n    def main(args: Array[String]):Unit = {\r\n    // connect to the database named \"mysql\" on the localhost\r\n    val driver = \"com.mysql.jdbc.Driver\"\r\n    val url = \"jdbc:mysql://localhost:3306/sqlexamples\" // Modify for whatever port you are running your DB on\r\n    val username = \"root\"\r\n    val password = \"database1234\" // Update to include your password\r\n\r\n    var connection:Connection = null\r\n\r\n    try {\r\n      // make the connection\r\n      Class.forName(driver)\r\n      connection = DriverManager.getConnection(url, username, password)\r\n\r\n      // Terminal run program\r\n      \r\n        // menuchoices()\r\n        // var scanner = new Scanner(System.in)\r\n        // var menuChoice = scanner.nextInt()\r\n        // println(menuChoice)\r\n        // var endProgram = false\r\n        // while (!endProgram){\r\n        //     menuChoice match {\r\n        //         case 1 => println(\"Add a task\")\r\n        //         menuChoice = scanner.nextInt()\r\n        //         case 2 => println(\"View Tasks\")\r\n        //         menuChoice = scanner.nextInt()\r\n        //         case 3 => println(\"Edit tasks\")\r\n        //         menuChoice = scanner.nextInt()\r\n        //         case 4 => println(\"Delete a task\")\r\n        //         menuChoice = scanner.nextInt()\r\n        //         case 5 => endProgram = true\r\n        //     }\r\n        // }\r\n\r\n\r\n\r\n      // create the statement, and run the select query\r\n      val statement = connection.createStatement()\r\n      val resultSet = statement.executeQuery(\"SELECT * FROM orders\") // Change query to your table\r\n      while ( resultSet.next() ) {\r\n        print(resultSet.getString(1) + \" \" + resultSet.getString(2) + \" \" + resultSet.getString(3))\r\n        println()\r\n      }\r\n    } catch {\r\n      case e: Exception => e.printStackTrace\r\n    }\r\n    connection.close()\r\n  }\r\n\r\n\r\n\r\n  // def menuchoices(): Unit = {\r\n  //       println(\"What would you like to do?\")\r\n  //       println(\"1. Add new task\")\r\n  //       println(\"2. View existing tasks\")\r\n  //       println(\"3. Edit task\")\r\n  //       println(\"4. Delete task\")\r\n  //       println(\"5. Exit\")\r\n  //   }\r\n}"}})[0m
[0m[[0m[0mdebug[0m] [0m[0manalysis location (C:\Users\gianc\Desktop\Revature\BigDataRepo\HWRepo\Project0\todocrud\target\scala-2.13\zinc\inc_compile_2.13.zip,true)[0m
[0m[[0m[32msuccess[0m] [0m[0mTotal time: 0 s, completed Jan 10, 2022, 2:01:43 PM[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(__waitWatch console0, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled request received: shutdown: JsonRpcRequestMessage(2.0, â™¨1, shutdown, null})[0m
